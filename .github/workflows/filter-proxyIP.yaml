name: Update DNS Record

on:
  #schedule:
  #  - cron: '0 * * * *'  # Run every hour
  workflow_dispatch:  # Allow manual trigger

jobs:
  update-dns:
    permissions:
      contents: write
    runs-on: windows-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4.1.2

    - name: Set up Git
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - name: Set up Python
      uses: actions/setup-python@v5.2.0
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Install Chocolatey
      shell: pwsh
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

    - name: Install WireGuard and gsudo
      run: choco install wireguard gsudo -y

    - name: Start Cloudflare Warp
      shell: pwsh
      run: |
        Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
        refreshenv
        C:\Windows\System32\curl.exe --ipv4 ip.me
        gsudo wireguard /installtunnelservice .\wgcf-profile.conf
        Start-Sleep -Seconds 5
        C:\Windows\System32\curl.exe --ipv4 ip.me

    - name: Run proxyIP filter
      run: python .\test-proxyip.py

    - name: Stop Cloudflare Warp
      shell: pwsh
      run: |
        Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
        refreshenv
        gsudo wireguard /uninstalltunnelservice wgcf-profile
        Start-Sleep -Seconds 5

    - name: Process CSV and update DNS
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
        CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        CLOUDFLARE_DOMAIN_NAME: ${{ secrets.CLOUDFLARE_DOMAIN_NAME }}
      run: python .\update_dns.py

    - name: Commit and push changes
      run: |
        git add .
        git commit -m "Update filtered proxyIP" || echo "No changes to commit"
        git pull --rebase
        git push
